{"version":3,"sources":["ui/Table.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Table","data","columns","search","pagination","enabled","limit","className","td","th","footer","a11yProps","index","id","TableSkeleton","Skeleton","animation","height","variant","App","useState","value","setValue","Container","maxWidth","Box","my","Typography","component","gutterBottom","TabContext","sx","borderBottom","borderColor","Tabs","onChange","_event","newValue","aria-label","Tab","label","TabPanel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUA2BeA,EAvBI,WACjB,OACE,8BACE,cAAC,IAAD,CACEC,KAAM,CACJ,CAAC,GAAI,MAAQ,MAAQ,MACrB,CAAC,wBAAyB,QAAS,QAAS,QAE9CC,QAAS,CAAC,SAAU,eAAgB,OAAQ,kBAC5CC,QAAQ,EACRC,WAAY,CACVC,SAAS,EACTC,MAAO,KAETC,UAAW,CACTC,GAAI,iCACJC,GAAI,mBACJC,OAAQ,yB,kBCRlB,SAASC,EAAUC,GACjB,MAAO,CACLC,GAAG,cAAD,OAAgBD,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAME,EAAqB,WACzB,OACE,gCACE,cAACC,EAAA,EAAD,CAAUC,WAAW,EAAOC,OAAQ,KACpC,cAACF,EAAA,EAAD,CAAUG,QAAQ,cAAcF,WAAW,EAAOC,OAAQ,UAiEjDE,EA5DE,WAAO,IAAD,EACKC,mBAAS,OADd,mBACdC,EADc,KACPC,EADO,KAOrB,OACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACC,EAAA,EAAD,CAAYT,QAAQ,KAAKU,UAAU,KAAKC,cAAY,EAApD,+BAGA,eAACC,EAAA,EAAD,CAAYT,MAAOA,EAAnB,UACE,cAACI,EAAA,EAAD,CAAKM,GAAI,CAAEC,aAAc,EAAGC,YAAa,WAAzC,SACE,eAACC,EAAA,EAAD,CACEb,MAAOA,EACPc,SAdS,SAACC,EAAwBC,GAC5Cf,EAASe,IAcCC,aAAW,qBAHb,UAKE,cAACC,EAAA,EAAD,aAAKC,MAAM,aAAanB,MAAM,OAAUV,EAAU,KAClD,cAAC4B,EAAA,EAAD,aACEC,MAAM,kBACNnB,MAAM,aACFV,EAAU,KAEhB,cAAC4B,EAAA,EAAD,aAAKC,MAAM,gBAAgBnB,MAAM,WAAcV,EAAU,KACzD,cAAC4B,EAAA,EAAD,aACEC,MAAM,mBACNnB,MAAM,cACFV,EAAU,KAEhB,cAAC4B,EAAA,EAAD,aACEC,MAAM,sBACNnB,MAAM,iBACFV,EAAU,UAIpB,cAAC8B,EAAA,EAAD,CAAUpB,MAAM,MAAhB,SACE,cAAC,EAAD,MAEF,cAACoB,EAAA,EAAD,CAAUpB,MAAM,YAAhB,SACE,cAAC,EAAD,MAEF,cAACoB,EAAA,EAAD,CAAUpB,MAAM,UAAhB,SACE,cAAC,EAAD,MAEF,cAACoB,EAAA,EAAD,CAAUpB,MAAM,aAAhB,SACE,cAAC,EAAD,MAEF,cAACoB,EAAA,EAAD,CAAUpB,MAAM,gBAAhB,SACE,cAAC,EAAD,eCrEGqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ad8e8c8e.chunk.js","sourcesContent":["import { Grid } from \"gridjs-react\";\nimport { VFC } from \"react\";\nimport \"./Table.css\";\n\nconst Table: VFC = () => {\n  return (\n    <div>\n      <Grid\n        data={[\n          [\"\", 105000, 105000, 2311],\n          [\" Source/libCTestLib.a\", 1993516, 1994816, 10279],\n        ]}\n        columns={[\"Module\", \"Size no .bss\", \"Size\", \"Num of records\"]}\n        search={true}\n        pagination={{\n          enabled: true,\n          limit: 100,\n        }}\n        className={{\n          td: \"dense-table-cell light-content\",\n          th: \"dense-table-cell\",\n          footer: \"dense-table-cell\",\n        }}\n      />\n    </div>\n  );\n};\nexport default Table;\n","import { SyntheticEvent, useState, VFC } from \"react\";\nimport \"./App.css\";\nimport {\n  Box,\n  Container,\n  Tab,\n  Tabs,\n  Typography,\n  Skeleton,\n} from \"@material-ui/core\";\nimport Table from \"./ui/Table\";\nimport { TabContext, TabPanel } from \"@material-ui/lab\";\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst TableSkeleton: VFC = () => {\n  return (\n    <div>\n      <Skeleton animation={false} height={64} />\n      <Skeleton variant=\"rectangular\" animation={false} height={500} />\n    </div>\n  );\n};\n\nconst App: VFC = () => {\n  const [value, setValue] = useState(\"all\");\n\n  const handleChange = (_event: SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          output.map viewer\n        </Typography>\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"basic tabs example\"\n            >\n              <Tab label=\"All (DEMO)\" value=\"all\" {...a11yProps(0)} />\n              <Tab\n                label=\"By Module (WIP)\"\n                value=\"by_module\"\n                {...a11yProps(1)}\n              />\n              <Tab label=\"By File (WIP)\" value=\"by_file\" {...a11yProps(2)} />\n              <Tab\n                label=\"By Section (WIP)\"\n                value=\"by_section\"\n                {...a11yProps(3)}\n              />\n              <Tab\n                label=\"By SubSection (WIP)\"\n                value=\"by_subsection\"\n                {...a11yProps(4)}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value=\"all\">\n            <Table />\n          </TabPanel>\n          <TabPanel value=\"by_module\">\n            <TableSkeleton />\n          </TabPanel>\n          <TabPanel value=\"by_file\">\n            <TableSkeleton />\n          </TabPanel>\n          <TabPanel value=\"by_section\">\n            <TableSkeleton />\n          </TabPanel>\n          <TabPanel value=\"by_subsection\">\n            <TableSkeleton />\n          </TabPanel>\n        </TabContext>\n      </Box>\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}