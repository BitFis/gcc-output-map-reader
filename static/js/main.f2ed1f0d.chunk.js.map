{"version":3,"sources":["ui/Table.tsx","parser/MapParser.tsx","ui/OutputDrop.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Table","data","columns","search","pagination","enabled","limit","className","td","th","footer","SubSection","Section","Name","StartAddress","Size","FileName","Additonal","MangledList","AddressSpaceSize","count","this","length","sort","a","b","AddressStart","reduce","last","item","subsection_content","match","tmp_remove_me","SUBSECTION_CONTENT","console","log","counter","dontCountAnyFollowUp","exec","identifier","startsWith","push","trim","addressStart","mangaledName","test","debug","MapParser","ADDRESS_HEX_LENGTH","parseInt","MangledName","NumRecords","section_content","SUBSECTION_REGEX","subSectionsList","subsection","address","size","fileName","subSection","parse","getNumRecords","section","currentPos","SECTION_MATCHER","Sections","Archives","index","lastIndex","name","hexaddr","slice","hexsize","warn","append","content","regexp","parseSectionMatch","TurnOnAMPEquality","OutputDrop","useFilePicker","multiple","accept","filesContent","errors","loading","useState","dropLoading","setDropLoading","dropError","setDropError","filesystemError","setFilesystemError","hover","setHover","JSON","stringify","Alert","onClose","severity","AlertTitle","FileDrop","onDrop","files","arrayBuffer","then","buffer","byteLength","Uint8Array","forEach","byte","String","fromCharCode","parser","Object","keys","Promise","res","rej","error","parseFile","catch","err","finally","onDragOver","onDragLeave","Box","sx","p","border","m","justifyContent","justifyItems","Button","disabled","onClick","fullWidth","style","backgroundColor","a11yProps","id","TableSkeleton","Skeleton","animation","height","variant","App","value","setValue","Container","maxWidth","my","Typography","component","gutterBottom","TabContext","borderBottom","borderColor","Tabs","onChange","_event","newValue","aria-label","Tab","label","TabPanel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2ed1f0d.chunk.js","sourcesContent":["import { Grid } from \"gridjs-react\";\nimport { VFC } from \"react\";\nimport \"./Table.css\";\n\nconst Table: VFC = () => {\n  return (\n    <div>\n      <Grid\n        data={[\n          [\"\", 105000, 105000, 2311],\n          [\" Source/libCTestLib.a\", 1993516, 1994816, 10279],\n        ]}\n        columns={[\"Module\", \"Size no .bss\", \"Size\", \"Num of records\"]}\n        search={true}\n        pagination={{\n          enabled: true,\n          limit: 100,\n        }}\n        className={{\n          td: \"dense-table-cell light-content\",\n          th: \"dense-table-cell\",\n          footer: \"dense-table-cell\",\n        }}\n      />\n    </div>\n  );\n};\nexport default Table;\n","interface SubSectionSpace {\n  MangledName: string;\n  AddressStart: number;\n}\n\nclass SubSection {\n  public Additonal: string[] = []; // valid but not specifically parser\n  // *(.xyz) options or *fill* -> not further processed for now\n  // mangledSubsectionContent\n  public MangledList: SubSectionSpace[] = [];\n  // -1 = undefined\n  public AddressSpaceSize = -1;\n\n  constructor(\n    public Section: string, // Section name\n    public Name: string, // Subsection name\n    public StartAddress: number, // Start address\n    public Size: number, // Size of subsection\n    public FileName: string // Filename\n  ) {}\n\n  getNumRecords(): number {\n    let count = 0;\n    if (this.Size > 0) {\n      count += 1;\n      if (this.MangledList.length > 0) {\n        // counts any number of records (if mangled name uses own address space)\n        this.MangledList.sort((a, b) => {\n          return a.AddressStart - b.AddressStart;\n        }).reduce((last, item) => {\n          if (last.AddressStart != item.AddressStart) {\n            count++;\n          }\n          return item;\n        });\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Parse subsection content and return number of child sections\n   */\n  parse(subsection_content: string): number {\n    const tmp_remove_me = \".no_match_data\";\n\n    //                         [space]   [* or space]\n    //                                if [---space--] [0x-address--------] [--mangaled name-]\n    //                                if [*][--some--additonal-info-(*fill* or *(.))---]\n    // eslint-disable-next-line\n    const SUBSECTION_CONTENT = /\\n[^\\.\\n](\\*[^\\n]*| +)(0x[0-9a-fA-F]+|[^ ]+)? *([^\\n]*)/gm;\n\n    if (this.Section == tmp_remove_me) {\n      console.log(subsection_content);\n    }\n\n    let match;\n    let counter = 0;\n    let dontCountAnyFollowUp = false;\n\n    while ((match = SUBSECTION_CONTENT.exec(subsection_content)) != null) {\n      const identifier = match[1];\n\n      if (!identifier) {\n        console.log(\n          `Potential SubSection parse issue in ${this.Section}:${this.Name}`,\n          subsection_content\n        );\n        continue;\n      }\n\n      if (identifier.startsWith(\"*\")) {\n        // found additonal content\n        this.Additonal.push(identifier);\n      } else if (identifier.trim() === \"\") {\n        const addressStart = match[2];\n        const mangaledName = match[3] ? match[3] : \"\";\n\n        // check valid hex\n        if (/^0x([0-9a-fA-F])+$/.test(addressStart)) {\n          // (REFACTOR: cleaner regex needed for identifing)\n          // check if address or size\n          if (addressStart.length == MapParser.ADDRESS_HEX_LENGTH) {\n            // it is an actual address space\n            this.MangledList.push({\n              AddressStart: parseInt(addressStart, 16),\n              MangledName: mangaledName,\n            });\n\n            // used for amax.exe\n            if (!dontCountAnyFollowUp) {\n              counter += 1;\n            }\n          } else {\n            // it is the size representation\n            // WIP, what todo\n          }\n        } else {\n          // no valid hex provided,\n          // this could be [!provide] value, lets just ignore but inform if not [!provide] - provide can be expected\n          if (\"[!provide]\" !== addressStart.trim()) {\n            console.debug(\n              `Ignoring SubSection content '${addressStart}' in ${this.Section}:${this.Name}`,\n              subsection_content\n            );\n          }\n          // TMP: compatible with AMP.exe\n          dontCountAnyFollowUp = true;\n          continue;\n        }\n\n        if (tmp_remove_me == this.Section) {\n          console.log(\n            \"I>\",\n            this.Section,\n            this.Name,\n            addressStart,\n            \"|\",\n            match[3]\n          );\n        }\n      } else {\n        console.log(\n          `Potential SubSection parse issue in ${this.Section}:${this.Name} - strange start: '${identifier}' (expected * or ' ')`,\n          subsection_content\n        );\n      }\n\n      // check valid address space\n    }\n\n    if (this.Section == tmp_remove_me) {\n      console.log(\"END\", this.Section, counter);\n    }\n\n    return counter;\n  }\n}\n\ninterface Archive {\n  Sumbol: string;\n  FileLocation: string;\n  CompilationUnit: string;\n  SymbolCall: string;\n}\n\nclass Section {\n  public NumRecords = 0;\n  // calculated length of address space to next sector\n  public AddressSpaceSize = 0;\n\n  constructor(\n    public Name: string, //\n    public StartAddress: number,\n    public Size: number\n  ) {}\n\n  parse(section_content: string): SubSection[] {\n    // regex::             [subsection] [0xaddress space] [    0xsize    ]  [ subsection valid aslong '\\n ^.' ]\n    // eslint-disable-next-line\n    const SUBSECTION_REGEX = / (\\.[^ \\t\\n]+)\\n? +(0x[0-9a-fA-F]+) +(0x[0-9a-fA-F]+) ?([^\\n]+)?((\\n [^\\.][^\\n]*)*)/gm;\n\n    // result NumRecords\n    // WIP\n    // console.log(\"parse for section: \", this.Name);\n\n    const subSectionsList: SubSection[] = [];\n    let match;\n\n    while ((match = SUBSECTION_REGEX.exec(section_content)) != null) {\n      const subsection = match[1];\n      const address = match[2] ? parseInt(match[2]) : 0;\n      const size = match[3] ? parseInt(match[3]) : 0;\n      const fileName = match[4];\n\n      // Amp.exe -> \"only allow paths starting with /\"\n      // for amp.exe equality.\n      // if (!fileName.startsWith(\"/\")) {\n      //   continue;\n      // }\n\n      // WIP add to somewhere\n      const subSection = new SubSection(\n        this.Name,\n        subsection,\n        address,\n        size,\n        fileName\n      );\n      if (match[5]) {\n        subSection.parse(match[5]);\n      }\n      subSectionsList.push(subSection);\n\n      this.NumRecords += subSection.getNumRecords();\n    }\n\n    // WIP possible to extend, matching regions with *(.ldata / )\n    return subSectionsList;\n  }\n\n  append(section: Section) {\n    // WIP\n    if (this.StartAddress == 0) {\n      this.StartAddress = section.StartAddress;\n    } else if (section.StartAddress != 0) {\n      console.log(\n        `undefined behaviour, joining section ${section.Name} - section exists twice with a address`\n      );\n    }\n    if (this.Size == 0) {\n      this.Size = section.Size;\n    } else if (section.Size != 0) {\n      console.log(\n        `undefined behaviour, joining section ${section.Name} - section exists twice with a size`\n      );\n    }\n    if (this.NumRecords == 0) {\n      this.NumRecords = section.NumRecords;\n    } else if (section.NumRecords != 0) {\n      console.log(\n        `undefined behaviour, joining section ${section.Name} - containing records twice`\n      );\n    }\n  }\n}\n\nclass MapParser {\n  private currentPos = 0;\n\n  // Wip, currently, since some stats are handled differently\n  // in the AMAP editor, and it is used as cross testing (expecting at least same results)\n  // this allows to turn \"backward\" compability on for correctness checking.\n  public static TurnOnAMPEquality = false;\n\n  // length of hex address representation, will help parsing\n  public static ADDRESS_HEX_LENGTH = 18;\n\n  private SECTION_MATCHER = /(\\n(\\.[^ \\n\\t]+)\\n? *(0x[0-9a-fA-F]+)? *(0x[0-9a-fA-F]+)?([^\\n]*(\\n [^\\n]*)*))/gm;\n\n  public Sections: {\n    [key: string]: Section;\n  } = {};\n  public Archives: {\n    [CompilationUnit: string]: Archive;\n  } = {};\n\n  private parseSectionMatch(match: RegExpExecArray) {\n    if (match.length <= 5) {\n      console.log(\n        `parser error at: ${match.index} ${this.SECTION_MATCHER.lastIndex}`\n      );\n      return;\n    }\n\n    if (match.length >= 4) {\n      const name = match[2];\n      const hexaddr = match[3]?.slice(2);\n      const hexsize = match[4]?.slice(2);\n\n      if (!name || (!hexaddr && hexsize) || (hexaddr && !hexsize)) {\n        console.warn(\n          `possible parsing error at character ${match.index} - ${this.SECTION_MATCHER.lastIndex}`\n        );\n        return;\n      }\n\n      const section = new Section(\n        name,\n        hexaddr ? parseInt(hexaddr, 16) : 0,\n        hexsize ? parseInt(hexsize, 16) : 0\n      );\n      section.parse(match[5]);\n      if (this.Sections[name]) {\n        this.Sections[name].append(section);\n      } else {\n        this.Sections[name] = section;\n      }\n    } else {\n      console.log(\n        `parser error at: ${match.index} ${this.SECTION_MATCHER.lastIndex}`\n      );\n    }\n  }\n\n  parse(content: string): void {\n    const regexp = this.SECTION_MATCHER;\n\n    let match: RegExpExecArray | null;\n    while ((match = regexp.exec(content)) !== null) {\n      const identifier = match[2];\n\n      if (identifier.startsWith(\".\")) {\n        // section\n        this.parseSectionMatch(match);\n      }\n    }\n  }\n}\n\nexport default MapParser;\n","import { Alert, AlertTitle, Box, Button } from \"@material-ui/core\";\nimport { useState, VFC } from \"react\";\nimport { FileDrop } from \"react-file-drop\";\nimport { useFilePicker } from \"use-file-picker\";\nimport MapParser from \"../parser/MapParser\";\n\nfunction parseFile(files: FileList | null): Promise<ArrayBuffer> {\n  if (files?.length === 1) {\n    const file = files.item(0) as File;\n\n    return file.arrayBuffer().then((buffer: ArrayBuffer) => {\n      // do things\n      console.log(\"lets work on the file size: \", buffer.byteLength);\n\n      let content = \"\";\n      new Uint8Array(buffer).forEach((byte: number) => {\n        content += String.fromCharCode(byte);\n      });\n\n      const parser = new MapParser();\n      parser.parse(content);\n\n      console.log(Object.keys(parser.Sections));\n\n      return buffer;\n    });\n  } else {\n    return new Promise((res, rej) => {\n      rej(\"provide one file!\");\n      console.error(files);\n    });\n  }\n}\n\nconst OutputDrop: VFC = () => {\n  const [filesContent, errors, openFileSelector, loading] = useFilePicker({\n    multiple: false,\n    // accept: '.ics,.pdf',\n    accept: [\".map\"],\n  });\n  // TMP\n  openFileSelector;\n  const [dropLoading, setDropLoading] = useState(false);\n  const [dropError, setDropError] = useState<boolean | string>(false);\n  const [filesystemError, setFilesystemError] = useState<boolean | string>(\n    false\n  );\n  const [hover, setHover] = useState(false);\n\n  if (filesContent[0]) {\n    console.log(\n      \"loading through filesystem currently not supported!\",\n      JSON.stringify(filesContent)\n    );\n  }\n\n  return (\n    <div>\n      {errors.length > 0 ? (\n        <Alert onClose={() => (errors.length = 0)} severity=\"error\">\n          <AlertTitle>Error occured while opening file!</AlertTitle>\n          {JSON.stringify(errors)}\n        </Alert>\n      ) : (\n        \"\"\n      )}\n      {filesystemError ? (\n        <Alert onClose={() => setFilesystemError(false)} severity=\"warning\">\n          <AlertTitle>{filesystemError}</AlertTitle>\n          Drop the file onto the region.\n        </Alert>\n      ) : (\n        \"\"\n      )}\n      {dropError ? (\n        <Alert onClose={() => setDropError(false)} severity=\"error\">\n          <AlertTitle>Loading Dropped file failed!</AlertTitle>\n          {dropError}\n        </Alert>\n      ) : (\n        \"\"\n      )}\n      <FileDrop\n        onDrop={(files) => {\n          setDropLoading(true);\n          parseFile(files)\n            .catch((err) => setDropError(err))\n            .finally(() => setDropLoading(false));\n        }}\n        onDragOver={() => {\n          if (!hover) {\n            setHover(true);\n            console.log(\"setHover(true)\");\n          }\n        }}\n        onDragLeave={() => {\n          if (hover) {\n            setHover(false);\n            console.log(\"setHover(false)\");\n          }\n        }}\n      >\n        <Box\n          sx={{ p: 0, border: \"1px dashed grey\", m: \"auto\" }}\n          justifyContent=\"center\"\n          justifyItems=\"center\"\n        >\n          <Button\n            disabled={loading || dropLoading}\n            onClick={() => {\n              // openFileSelector()\n              setFilesystemError(\"openFileSelector currently not supported\");\n            }}\n            sx={{ p: 3, m: \"auto\" }}\n            fullWidth={true}\n            style={\n              hover\n                ? {\n                    backgroundColor: \"rgba(63, 81, 181, 0.04)\",\n                  }\n                : {}\n            }\n          >\n            {loading || dropLoading ? \"Loading ...\" : \"Drop output.map here\"}\n          </Button>\n        </Box>\n      </FileDrop>\n    </div>\n  );\n};\n\nexport default OutputDrop;\n","import { SyntheticEvent, useState, VFC } from \"react\";\nimport \"./App.css\";\nimport {\n  Box,\n  Container,\n  Tab,\n  Tabs,\n  Typography,\n  Skeleton,\n} from \"@material-ui/core\";\nimport Table from \"./ui/Table\";\nimport { TabContext, TabPanel } from \"@material-ui/lab\";\nimport OutputDrop from \"./ui/OutputDrop\";\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst TableSkeleton: VFC = () => {\n  return (\n    <div>\n      <Skeleton animation={false} height={64} />\n      <Skeleton variant=\"rectangular\" animation={false} height={500} />\n    </div>\n  );\n};\n\nconst App: VFC = () => {\n  const [value, setValue] = useState(\"all\");\n\n  const handleChange = (_event: SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          output.map viewer\n        </Typography>\n\n        <OutputDrop />\n\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"basic tabs example\"\n            >\n              <Tab label=\"All (DEMO)\" value=\"all\" {...a11yProps(0)} />\n              <Tab\n                label=\"By Module (WIP)\"\n                value=\"by_module\"\n                {...a11yProps(1)}\n              />\n              <Tab label=\"By File (WIP)\" value=\"by_file\" {...a11yProps(2)} />\n              <Tab\n                label=\"By Section (WIP)\"\n                value=\"by_section\"\n                {...a11yProps(3)}\n              />\n              <Tab\n                label=\"By SubSection (WIP)\"\n                value=\"by_subsection\"\n                {...a11yProps(4)}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value=\"all\">\n            <Table />\n          </TabPanel>\n          <TabPanel value=\"by_module\">\n            <TableSkeleton />\n          </TabPanel>\n          <TabPanel value=\"by_file\">\n            <TableSkeleton />\n          </TabPanel>\n          <TabPanel value=\"by_section\">\n            <TableSkeleton />\n          </TabPanel>\n          <TabPanel value=\"by_subsection\">\n            <TableSkeleton />\n          </TabPanel>\n        </TabContext>\n      </Box>\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}