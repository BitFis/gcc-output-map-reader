{"version":3,"sources":["ui/Table.tsx","parser/MapParser.tsx","ui/OutputDrop.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Table","data","columns","search","pagination","enabled","limit","className","td","th","footer","SubSection","Section","Name","StartAddress","Size","FileName","NumRecords","section_content","match","SUBSECTION_REGEX","this","console","log","exec","subsection","address","parseInt","size","fileName","startsWith","section","MapParser","currentPos","SECTION_MATCHER","Sections","content","regexp","length","index","lastIndex","name","hexaddr","slice","hexsize","warn","parse","append","OutputDrop","useFilePicker","multiple","accept","filesContent","errors","loading","useState","dropLoading","setDropLoading","dropError","setDropError","filesystemError","setFilesystemError","hover","setHover","JSON","stringify","Alert","onClose","severity","AlertTitle","FileDrop","onDrop","files","item","arrayBuffer","then","buffer","byteLength","Uint8Array","forEach","byte","String","fromCharCode","parser","Object","keys","Promise","res","rej","error","parseFile","catch","err","finally","onDragOver","onDragLeave","Box","sx","p","border","m","justifyContent","justifyItems","Button","disabled","onClick","fullWidth","style","backgroundColor","a11yProps","id","TableSkeleton","Skeleton","animation","height","variant","App","value","setValue","Container","maxWidth","my","Typography","component","gutterBottom","TabContext","borderBottom","borderColor","Tabs","onChange","_event","newValue","aria-label","Tab","label","TabPanel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.055c0ad5.chunk.js","sourcesContent":["import { Grid } from \"gridjs-react\";\nimport { VFC } from \"react\";\nimport \"./Table.css\";\n\nconst Table: VFC = () => {\n  return (\n    <div>\n      <Grid\n        data={[\n          [\"\", 105000, 105000, 2311],\n          [\" Source/libCTestLib.a\", 1993516, 1994816, 10279],\n        ]}\n        columns={[\"Module\", \"Size no .bss\", \"Size\", \"Num of records\"]}\n        search={true}\n        pagination={{\n          enabled: true,\n          limit: 100,\n        }}\n        className={{\n          td: \"dense-table-cell light-content\",\n          th: \"dense-table-cell\",\n          footer: \"dense-table-cell\",\n        }}\n      />\n    </div>\n  );\n};\nexport default Table;\n","class SubSection {\n  constructor(\n    public Section: string,\n    public Name: string, //\n    public StartAddress: number,\n    public Size: number,\n    public FileName: string\n  ) {}\n}\n\nclass Section {\n  public NumRecords = 0;\n\n  constructor(\n    public Name: string, //\n    public StartAddress: number,\n    public Size: number\n  ) {}\n\n  parse(section_content: string) {\n    // regex::             [subsection] [0xaddress space] [    0xsize    ]  [ subsection valid aslong '\\n ^.' ]\n    // eslint-disable-next-line\n    const SUBSECTION_REGEX = / (\\.[^ \\t]+) +(0x[0-9a-zA-Z]+) +(0x[0-9a-zA-Z]+) ?([^\\n]+)?(\\n [^\\.][^\\n]*)*/gm;\n\n    // result NumRecords\n    // WIP\n    // console.log(\"parse for section: \", this.Name);\n\n    let match;\n\n    if (this.Name == \".init_array\") {\n      console.log(section_content);\n    }\n\n    while ((match = SUBSECTION_REGEX.exec(section_content)) != null) {\n      const subsection = match[1];\n      const address = match[2] ? parseInt(match[2]) : 0;\n      const size = match[3] ? parseInt(match[3]) : 0;\n      const fileName = match[4];\n\n      // TMP -> \"only allow paths starting with /\"\n      // (can be changed back later till get same result as amap.exe)\n      if (!fileName.startsWith(\"/\")) continue;\n\n      // WIP\n      new SubSection(this.Name, subsection, address, size, fileName);\n\n      if (size > 0) {\n        this.NumRecords++;\n      }\n    }\n\n    // WIP possible to extend, matching regions with *(.ldata / )\n  }\n\n  append(section: Section) {\n    // WIP\n    if (this.StartAddress == 0) {\n      this.StartAddress = section.StartAddress;\n    } else if (section.StartAddress != 0) {\n      console.log(\n        `undefined behaviour, joining section ${section.Name} - address`\n      );\n    }\n    if (this.Size == 0) {\n      this.Size = section.Size;\n    } else if (section.Size != 0) {\n      console.log(\n        `undefined behaviour, joining section ${section.Name} - size`\n      );\n    }\n    if (this.NumRecords == 0) {\n      this.NumRecords = section.NumRecords;\n    } else if (section.NumRecords != 0) {\n      console.log(\n        `undefined behaviour, joining section ${section.Name} - containing records`\n      );\n    }\n  }\n}\n\nclass MapParser {\n  private currentPos = 0;\n\n  private SECTION_MATCHER = /\\n(\\.[^ \\n\\t]+)\\n? *(0x[0-9a-zA-Z]+)? *(0x[0-9a-zA-Z]+)?([^\\n]*(\\n [^\\n]*)*)/gm;\n\n  public Sections: {\n    [key: string]: Section;\n  } = {};\n\n  parse(content: string): void {\n    const regexp = this.SECTION_MATCHER;\n\n    let match: RegExpExecArray | null;\n    while ((match = regexp.exec(content)) !== null) {\n      if (match.length <= 4) {\n        console.log(\n          `parser error at: ${match.index} ${this.SECTION_MATCHER.lastIndex}`\n        );\n        continue;\n      }\n\n      if (match.length >= 3) {\n        const name = match[1];\n        const hexaddr = match[2]?.slice(2);\n        const hexsize = match[3]?.slice(2);\n\n        if (!name || (!hexaddr && hexsize) || (hexaddr && !hexsize)) {\n          console.warn(\n            `possible parsing error at character ${match.index} - ${this.SECTION_MATCHER.lastIndex}`\n          );\n          continue;\n        }\n\n        const section = new Section(\n          name,\n          hexaddr ? parseInt(hexaddr, 16) : 0,\n          hexsize ? parseInt(hexsize, 16) : 0\n        );\n        section.parse(match[4]);\n        if (this.Sections[name]) {\n          this.Sections[name].append(section);\n        } else {\n          this.Sections[name] = section;\n        }\n      } else {\n        console.log(\n          `parser error at: ${match.index} ${this.SECTION_MATCHER.lastIndex}`\n        );\n      }\n    }\n  }\n}\n\nexport default MapParser;\n","import { Alert, AlertTitle, Box, Button } from \"@material-ui/core\";\nimport { useState, VFC } from \"react\";\nimport { FileDrop } from \"react-file-drop\";\nimport { useFilePicker } from \"use-file-picker\";\nimport MapParser from \"../parser/MapParser\";\n\nfunction parseFile(files: FileList | null): Promise<ArrayBuffer> {\n  if (files?.length === 1) {\n    const file = files.item(0) as File;\n\n    return file.arrayBuffer().then((buffer: ArrayBuffer) => {\n      // do things\n      console.log(\"lets work on the file size: \", buffer.byteLength);\n\n      let content = \"\";\n      new Uint8Array(buffer).forEach((byte: number) => {\n        content += String.fromCharCode(byte);\n      });\n\n      const parser = new MapParser();\n      parser.parse(content);\n\n      console.log(Object.keys(parser.Sections));\n\n      return buffer;\n    });\n  } else {\n    return new Promise((res, rej) => {\n      rej(\"provide one file!\");\n      console.error(files);\n    });\n  }\n}\n\nconst OutputDrop: VFC = () => {\n  const [filesContent, errors, openFileSelector, loading] = useFilePicker({\n    multiple: false,\n    // accept: '.ics,.pdf',\n    accept: [\".map\"],\n  });\n  // TMP\n  openFileSelector;\n  const [dropLoading, setDropLoading] = useState(false);\n  const [dropError, setDropError] = useState<boolean | string>(false);\n  const [filesystemError, setFilesystemError] = useState<boolean | string>(\n    false\n  );\n  const [hover, setHover] = useState(false);\n\n  if (filesContent[0]) {\n    console.log(\n      \"loading through filesystem currently not supported!\",\n      JSON.stringify(filesContent)\n    );\n  }\n\n  return (\n    <div>\n      {errors.length > 0 ? (\n        <Alert onClose={() => (errors.length = 0)} severity=\"error\">\n          <AlertTitle>Error occured while opening file!</AlertTitle>\n          {JSON.stringify(errors)}\n        </Alert>\n      ) : (\n        \"\"\n      )}\n      {filesystemError ? (\n        <Alert onClose={() => setFilesystemError(false)} severity=\"warning\">\n          <AlertTitle>{filesystemError}</AlertTitle>\n          Drop the file onto the region.\n        </Alert>\n      ) : (\n        \"\"\n      )}\n      {dropError ? (\n        <Alert onClose={() => setDropError(false)} severity=\"error\">\n          <AlertTitle>Loading Dropped file failed!</AlertTitle>\n          {dropError}\n        </Alert>\n      ) : (\n        \"\"\n      )}\n      <FileDrop\n        onDrop={(files) => {\n          setDropLoading(true);\n          parseFile(files)\n            .catch((err) => setDropError(err))\n            .finally(() => setDropLoading(false));\n        }}\n        onDragOver={() => {\n          if (!hover) {\n            setHover(true);\n            console.log(\"setHover(true)\");\n          }\n        }}\n        onDragLeave={() => {\n          if (hover) {\n            setHover(false);\n            console.log(\"setHover(false)\");\n          }\n        }}\n      >\n        <Box\n          sx={{ p: 0, border: \"1px dashed grey\", m: \"auto\" }}\n          justifyContent=\"center\"\n          justifyItems=\"center\"\n        >\n          <Button\n            disabled={loading || dropLoading}\n            onClick={() => {\n              // openFileSelector()\n              setFilesystemError(\"openFileSelector currently not supported\");\n            }}\n            sx={{ p: 3, m: \"auto\" }}\n            fullWidth={true}\n            style={\n              hover\n                ? {\n                    backgroundColor: \"rgba(63, 81, 181, 0.04)\",\n                  }\n                : {}\n            }\n          >\n            {loading || dropLoading ? \"Loading ...\" : \"Drop output.map here\"}\n          </Button>\n        </Box>\n      </FileDrop>\n    </div>\n  );\n};\n\nexport default OutputDrop;\n","import { SyntheticEvent, useState, VFC } from \"react\";\nimport \"./App.css\";\nimport {\n  Box,\n  Container,\n  Tab,\n  Tabs,\n  Typography,\n  Skeleton,\n} from \"@material-ui/core\";\nimport Table from \"./ui/Table\";\nimport { TabContext, TabPanel } from \"@material-ui/lab\";\nimport OutputDrop from \"./ui/OutputDrop\";\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst TableSkeleton: VFC = () => {\n  return (\n    <div>\n      <Skeleton animation={false} height={64} />\n      <Skeleton variant=\"rectangular\" animation={false} height={500} />\n    </div>\n  );\n};\n\nconst App: VFC = () => {\n  const [value, setValue] = useState(\"all\");\n\n  const handleChange = (_event: SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          output.map viewer\n        </Typography>\n\n        <OutputDrop />\n\n        <TabContext value={value}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"basic tabs example\"\n            >\n              <Tab label=\"All (DEMO)\" value=\"all\" {...a11yProps(0)} />\n              <Tab\n                label=\"By Module (WIP)\"\n                value=\"by_module\"\n                {...a11yProps(1)}\n              />\n              <Tab label=\"By File (WIP)\" value=\"by_file\" {...a11yProps(2)} />\n              <Tab\n                label=\"By Section (WIP)\"\n                value=\"by_section\"\n                {...a11yProps(3)}\n              />\n              <Tab\n                label=\"By SubSection (WIP)\"\n                value=\"by_subsection\"\n                {...a11yProps(4)}\n              />\n            </Tabs>\n          </Box>\n          <TabPanel value=\"all\">\n            <Table />\n          </TabPanel>\n          <TabPanel value=\"by_module\">\n            <TableSkeleton />\n          </TabPanel>\n          <TabPanel value=\"by_file\">\n            <TableSkeleton />\n          </TabPanel>\n          <TabPanel value=\"by_section\">\n            <TableSkeleton />\n          </TabPanel>\n          <TabPanel value=\"by_subsection\">\n            <TableSkeleton />\n          </TabPanel>\n        </TabContext>\n      </Box>\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}